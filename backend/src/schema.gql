# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Achivement {
  id: ID!
  title: String!
  content: String!
  date: Int!
}

type Match {
  id: ID!
  winner: User!
  winner_point: Int!
  loser: User!
  loser_point: Int!
  type: MatchType!
  time_stamp: String!
}

enum MatchType {
  RANK
  CUSTOM
}

type User {
  id: ID!
  intra_id: String!
  nickname: String!
  avatar: String!
  status_message: String
  status: UserStatus!
  friends: [User!]!
  blacklist: [User!]!
  rank_score: Int!
  rank: Int!
  match_history: [Match!]!
  achivements: [Achivement!]!
  channel: Channel
  role: UserRole!
}

enum UserStatus {
  ONLINE
  IN_RANK_GAME
  IN_NORMAL_GAME
  OFFLINE
}

enum UserRole {
  USER
  MODERATOR
  OWNER
}

type Channel {
  id: ID!
  title: String!
  is_private: Boolean!
  owner: User!
  administrators: [User!]!
  participants: [User!]!
  bannedUsers: [User!]!
  mutedUsers: [User!]!
}

type ChannelNotify {
  type: Notify!
  participant: User
  text: String
  check: Boolean
}

enum Notify {
  ENTER
  CHAT
  MUTE
  KICK
  BAN
  EDIT
  DELETE
}

type DM {
  user_id: ID!
  other_id: ID!
  other_user: User!
  messages(limit: Int!, offset: Int!): [Message!]
  checked_date: String!
}

type Message {
  id: ID!
  received: Boolean!
  content: String!
  checked: Boolean!
  time_stamp: String!
}

type Query {
  whoAmI: Int!
  user(nickname: String, id: ID): User
  users(limit: Int!, offset: Int!, ladder: Boolean!): [User!]!
  DM(other_id: ID!, user_id: ID!): DM
  dmUsers(limit: Int!, offset: Int!, user_id: ID!): [User!]!
  channel(channel_id: ID!): Channel
  channels(limit: Float!, offset: Float!): [Channel!]
}

type Mutation {
  createUser(nickname: String!): User
  addFriend(friend_id: ID!, user_id: ID!): Boolean
  deleteFriend(friend_id: ID!, user_id: ID!): Boolean!
  addToBlackLIst(black_id: ID!, user_id: ID!): Boolean!
  deleteFromBlackList(black_id: ID!, user_id: ID!): Boolean!
  sendMessage(text: String!, other_id: ID!, user_id: ID!): Message
  updateCheckdate(other_id: ID!, user_id: ID!): Boolean
  enterChannel(channel_id: String!, user_id: String!): Channel
  leaveChannel(channel_id: String!, user_id: String!): Boolean!
  addChannel(owner_user_id: String!, password: String, title: String!): Channel
  editChannel(password: String, title: String!, channel_id: ID!): Channel
  deleteChannel(channel_id: ID!): Boolean!
  muteUserOnChannel(mute_time: Int!, user_id: ID!, channel_id: ID!): Boolean!
  unmuteUserOnChannel(user_id: ID!, channel_id: ID!): Boolean!
  kickUserFromChannel(user_id: ID!, channel_id: ID!): Boolean!
  banUserFromChannel(user_id: ID!, channel_id: ID!): Boolean!
  unbanUserFromChannel(user_id: ID!, channel_id: ID!): Boolean!
  chatMessage(message: String!, user_id: ID!, channel_id: ID!): Boolean!
}

type Subscription {
  receiveMessage(user_id: ID!): Message!
  newDmUser(user_id: String!): User!
  subscribeChannel(channel_id: String!): ChannelNotify!
  subscribeChannelUpdate: Channel!
}
